[versions]

kotlin = "1.9.24"
staging = "1.3.0"

spring-boot = "3.2.5"

slf4j = "2.0.9"
logback = "1.4.14"
mockk = "1.13.16"
junit = "5.10.2"
assertj = "3.24.2"

[plugins]
kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
nexus-publishing = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "staging"}

[libraries]
# spring-boot
spring-boot-framework = { module = "org.springframework.boot:spring-boot", version.ref = "spring-boot"}
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot"}
spring-boot-autoconfigure = { module = "org.springframework.boot:spring-boot-autoconfigure", version.ref = "spring-boot"}

# logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback"}

# test
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk"}
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot"}